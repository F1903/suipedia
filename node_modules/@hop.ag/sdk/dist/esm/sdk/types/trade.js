import { z } from "zod";
export var SuiExchange;
(function (SuiExchange) {
    SuiExchange["CETUS"] = "CETUS";
    SuiExchange["FLOWX"] = "FLOWX";
    SuiExchange["TURBOS"] = "TURBOS";
    SuiExchange["AFTERMATH"] = "AFTERMATH";
    SuiExchange["KRIYA"] = "KRIYA";
    SuiExchange["BLUEMOVE"] = "BLUEMOVE";
    SuiExchange["DEEPBOOK"] = "DEEPBOOK";
    SuiExchange["SUISWAP"] = "SUISWAP";
    SuiExchange["HOPFUN"] = "HOPFUN";
    SuiExchange["BLUEFIN"] = "BLUEFIN";
    SuiExchange["MOVEPUMP"] = "MOVEPUMP";
    SuiExchange["TURBOSFUN"] = "TURBOSFUN";
    SuiExchange["SPRINGSUI"] = "SPRINGSUI";
    SuiExchange["STSUI"] = "STSUI";
    SuiExchange["OBRIC"] = "OBRIC";
})(SuiExchange || (SuiExchange = {}));
const suiExchangeSchema = z.nativeEnum(SuiExchange).or(z.string());
export const poolExtraSchema = z.union([
    z.object({
        AFTERMATH: z.object({
            lp_coin_type: z.string(),
        }).passthrough(),
    }),
    z.object({
        DEEPBOOK: z.object({
            pool_type: z.string(),
            lot_size: z.coerce.bigint(),
            min_size: z.coerce.bigint()
        }).passthrough(),
    }),
    z.object({
        TURBOS: z.object({
            coin_type_a: z.string(),
            coin_type_b: z.string(),
            fee_type: z.string(),
            tick_spacing: z.number(),
            tick_current_index: z.number(),
        }).passthrough(),
    }),
    z.object({
        CETUS: z.object({
            coin_type_a: z.string(),
            coin_type_b: z.string(),
        }).passthrough(),
    }),
    z.object({
        FLOWX: z.object({
            is_v3: z.boolean(),
            fee_rate: z.number().nullish(),
        }).passthrough()
    }),
    z.object({
        KRIYA: z.object({
            is_v3: z.boolean()
        }).passthrough()
    }),
    z.object({
        SPRINGSUI: z.object({
            weighthook_id: z.string(),
            weighthook_version: z.number()
        })
    }),
    z.object({}).passthrough()
]);
const tradePoolSchema = z.object({
    object_id: z.string(),
    initial_shared_version: z.number().nullable(),
    sui_exchange: suiExchangeSchema,
    tokens: z.array(z.string()).nonempty(),
    is_active: z.boolean(),
    extra: poolExtraSchema.nullable(),
}).passthrough();
const routeNodeSchema = z.object({
    coin_in: z.string(),
    coin_out: z.string(),
    pool_id: z.string(),
    amount_in: z.bigint(),
    amount_out: z.bigint()
});
export const gammaTradeSchema = z.object({
    pools: z.map(z.string(), tradePoolSchema),
    routes: z.array(z.array(routeNodeSchema)),
    amount_in: z.bigint(),
    quote: z.bigint(),
}).passthrough();
//# sourceMappingURL=trade.js.map