{"version":3,"file":"trade.js","sourceRoot":"","sources":["../../../../src/sdk/types/trade.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from \"zod\";\n\nexport enum SuiExchange {\n  CETUS = \"CETUS\",\n  FLOWX = \"FLOWX\",\n  TURBOS = \"TURBOS\",\n  AFTERMATH = \"AFTERMATH\",\n  KRIYA = \"KRIYA\",\n  BLUEMOVE = \"BLUEMOVE\",\n  DEEPBOOK = \"DEEPBOOK\",\n  SUISWAP = \"SUISWAP\",\n  HOPFUN = \"HOPFUN\",\n  BLUEFIN = \"BLUEFIN\",\n  MOVEPUMP = \"MOVEPUMP\",\n  TURBOSFUN = \"TURBOSFUN\",\n  SPRINGSUI = \"SPRINGSUI\",\n  STSUI = \"STSUI\",\n  OBRIC = \"OBRIC\"\n}\n\nconst suiExchangeSchema = z.nativeEnum(SuiExchange).or(z.string());\n\nexport const poolExtraSchema = z.union([\n  z.object({\n    AFTERMATH: z.object({\n      lp_coin_type: z.string(),\n    }).passthrough(),\n  }),\n  z.object({\n    DEEPBOOK: z.object({\n      pool_type: z.string(),\n      lot_size: z.coerce.bigint(),\n      min_size: z.coerce.bigint()\n    }).passthrough(),\n  }),\n  z.object({\n    TURBOS: z.object({\n      coin_type_a: z.string(),\n      coin_type_b: z.string(),\n      fee_type: z.string(),\n      tick_spacing: z.number(),\n      tick_current_index: z.number(),\n    }).passthrough(),\n  }),\n  z.object({\n    CETUS: z.object({\n      coin_type_a: z.string(),\n      coin_type_b: z.string(),\n    }).passthrough(),\n  }),\n  z.object({\n    FLOWX: z.object({\n      is_v3: z.boolean(),\n      fee_rate: z.number().nullish(),\n    }).passthrough()\n  }),\n  z.object({\n    KRIYA: z.object({\n      is_v3: z.boolean()\n    }).passthrough()\n  }),\n  z.object({\n    SPRINGSUI: z.object({\n      weighthook_id: z.string(),\n      weighthook_version: z.number()\n    })\n  }),\n  z.object({}).passthrough()\n]);\n\nexport type PoolExtra = z.infer<typeof poolExtraSchema>;\n\nconst tradePoolSchema = z.object({\n  object_id: z.string(),\n  initial_shared_version: z.number().nullable(),\n  sui_exchange: suiExchangeSchema,\n  tokens: z.array(z.string()).nonempty(),\n  is_active: z.boolean(),\n  extra: poolExtraSchema.nullable(),\n}).passthrough();\n\nexport type TradePool = z.infer<typeof tradePoolSchema>;\n\nconst routeNodeSchema = z.object({\n  coin_in: z.string(),\n  coin_out: z.string(),\n  pool_id: z.string(),\n  amount_in: z.bigint(),\n  amount_out: z.bigint()\n});\n\nexport type RouteNode = z.infer<typeof routeNodeSchema>;\n\nexport const gammaTradeSchema = z.object({\n  pools: z.map(z.string(), tradePoolSchema),\n  routes: z.array(z.array(routeNodeSchema)),\n\n  amount_in: z.bigint(),\n  quote: z.bigint(),\n}).passthrough();\n\nexport type GammaTrade = z.infer<typeof gammaTradeSchema>;\n"]}