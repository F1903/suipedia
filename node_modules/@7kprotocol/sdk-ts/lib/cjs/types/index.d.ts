export * from "./types/aggregator";
import { Config } from "./config";
import { getTokenPrice, getTokenPrices, getSuiPrice } from "./features/prices";
import { buildTx, getQuote, estimateGasFee, getSwapHistory } from "./features/swap";
import { placeLimitOrder, getOpenLimitOrders, cancelLimitOrder, claimExpiredLimitOrder, getClosedLimitOrders, placeDcaOrder, getOpenDcaOrders, cancelDcaOrder, getClosedDcaOrders, getDcaOrderExecutions } from "./features/limitDca";
declare const getSuiClient: () => import("@mysten/sui/dist/cjs/client").SuiClient;
declare const setSuiClient: (client: import("@mysten/sui/dist/cjs/client").SuiClient) => void;
export { Config, getSuiClient, setSuiClient, getTokenPrice, getTokenPrices, getSuiPrice, getQuote, estimateGasFee, buildTx, getSwapHistory, placeLimitOrder, getOpenLimitOrders, cancelLimitOrder, claimExpiredLimitOrder, getClosedLimitOrders, placeDcaOrder, getOpenDcaOrders, cancelDcaOrder, getClosedDcaOrders, getDcaOrderExecutions, };
declare const _default: {
    Config: {
        setApiKey: (key: string) => void;
        getApiKey: () => string;
        setSuiClient: (client: import("@mysten/sui/dist/cjs/client").SuiClient) => void;
        getSuiClient: () => import("@mysten/sui/dist/cjs/client").SuiClient;
    };
    getSuiClient: () => import("@mysten/sui/dist/cjs/client").SuiClient;
    setSuiClient: (client: import("@mysten/sui/dist/cjs/client").SuiClient) => void;
    getTokenPrice: typeof getTokenPrice;
    getTokenPrices: typeof getTokenPrices;
    getSuiPrice: typeof getSuiPrice;
    getQuote: typeof getQuote;
    estimateGasFee: typeof estimateGasFee;
    buildTx: ({ quoteResponse, accountAddress, slippage, commission: _commission, devInspect, extendTx, isSponsored }: import("./types/tx").BuildTxParams) => Promise<{
        tx: import("@mysten/sui/dist/cjs/transactions").Transaction;
        coinOut: import("@mysten/sui/dist/cjs/transactions").TransactionObjectArgument | undefined;
    }>;
    getSwapHistory: typeof getSwapHistory;
    placeLimitOrder: typeof placeLimitOrder;
    getOpenLimitOrders: typeof getOpenLimitOrders;
    cancelLimitOrder: typeof cancelLimitOrder;
    claimExpiredLimitOrder: typeof claimExpiredLimitOrder;
    getClosedLimitOrders: typeof getClosedLimitOrders;
    placeDcaOrder: typeof placeDcaOrder;
    getOpenDcaOrders: typeof getOpenDcaOrders;
    cancelDcaOrder: typeof cancelDcaOrder;
    getClosedDcaOrders: typeof getClosedDcaOrders;
    getDcaOrderExecutions: typeof getDcaOrderExecutions;
};
export default _default;
//# sourceMappingURL=index.d.ts.map